"我的vim配置
"===========

set nocompatible "禁用vi兼容模式

"编码相关
set fileformats=unix
set fileencodings=utf-8,gb2312,gbk,gb18030 "Vim 打开文件时尝试使用的编码
set encoding=utf-8 "Vim 的内部编码
set fileencoding=utf-8 "Vim当前编辑的文件在存储时的编码
"set termencoding=utf-8 "Vim 在与屏幕/键盘交互时使用的编码(取决于实际的终端的设定)

set helplang=cn "使用中文帮助文档

syntax enable
syntax on "语法高亮
"vim高亮的配色方案(desert,delek,torte)
colorscheme desert
"colorscheme elflord
"colorscheme ron
"colorscheme torte
"colorscheme murphy

set nu "显示行号
set wrap "自动折行
"set autoread   "文件在Vim之外修改过，自动重新读入

set expandtab "在缩进和遇到Tab键时,使用空格替代,宽度为4个空格
set shiftwidth=4 "缩进的空格数为4, set sw=2
set tabstop=4 "定义tab所等同的空格长度, set ts=2
set softtabstop=4
set autoindent "自动对齐，使用上一行的对齐方式
set smartindent "智能缩进
"filetype plugin indent on "自动检测文件类型，用文件类型plugin脚本，使用缩进定义文件
"根据文件类型设置缩进格式
"au FileType html,python,vim,less setl shiftwidth=2
"au FileType html,python,vim,less setl tabstop=2
"au FileType java,php setl shiftwidth=4
"au FileType java,php setl tabstop=4

set ruler "在右下角显示光标位置
"set cursorline "突出显示当前行

set foldmethod=indent "折叠

""命令收集
"使php识别EOT字符串
hi link phpheredoc string

"markdown语法高亮
au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn} set filetype=mkd
let g:vim_markdown_folding_disabled=1

set hlsearch "高亮显示搜索结果,关闭:set nohls
set incsearch "搜索时一边输入一边显示效果
set ignorecase "忽略大小写(查找字符串时)

"高亮显示行尾的空格 ctermbg=red时,空格反白显示
"{
"highlight WhitespaceEOL ctermbg=red guibg=red
highlight WhitespaceEOL ctermbg=red
match WhitespaceEOL /\s\+$/
"}

set showcmd "显示未敲完的命令
"set cmdheight=2 "设定命令行（在状态行下）的高度，默认为1，这里是2

set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%Y-%m-%d\ -\ %H:%M\")}   "状态行显示的内容
set laststatus=1 "启动显示状态行(1),总是显示状态行(2)


"新建.c,.h,.sh,.java文件，自动插入文件头
autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec ":call SetTitle()"
""定义函数SetTitle，自动插入文件头
func SetTitle()
	"如果文件类型为.sh文件
	if &filetype == 'sh'
		call setline(1,"\#########################################################################")
		call append(line("."), "\# File Name: ".expand("%"))
		call append(line(".")+1, "\# Author: xiongfusong")
		call append(line(".")+2, "\# mail: xiongfusong@gmail.com")
		call append(line(".")+3, "\# Created Time: ".strftime("%c"))
		call append(line(".")+4, "\#########################################################################")
		call append(line(".")+5, "\#!/bin/bash")
		call append(line(".")+6, "")
	else
		call setline(1, "/*************************************************************************")
		call append(line("."), "	> File Name: ".expand("%"))
		call append(line(".")+1, "	> Author: xiongfusong")
		call append(line(".")+2, "	> Mail: xiongfusong@gmail.com")
		call append(line(".")+3, "	> Created Time: ".strftime("%c"))
		call append(line(".")+4, " ************************************************************************/")
		call append(line(".")+5, "")
	endif
	if &filetype == 'cpp'
		call append(line(".")+6, "#include<iostream>")
		call append(line(".")+7, "using namespace std;")
		call append(line(".")+8, "")
	endif
	if &filetype == 'c'
		call append(line(".")+6, "#include<stdio.h>")
		call append(line(".")+7, "")
	endif
	"	if &filetype == 'java'
	"		call append(line(".")+6,"public class ".expand("%"))
	"		call append(line(".")+7,"")
	"	endif
	"新建文件后，自动定位到文件末尾
	autocmd BufNewFile * normal G
endfunc

"conf for tabs, 为标签页进行的配置，通过ctrl h/l切换标签等
let mapleader = ','
nnoremap <C-l> gt
nnoremap <C-h> gT
nnoremap <leader>t : tabe<CR>

set showmatch  "设置匹配模式，类似当输入一个左括号时匹配上相应的那个右括号
